[gd_scene load_steps=18 format=3 uid="uid://crstna6wto6j3"]

[ext_resource type="PackedScene" uid="uid://drnwjy53eh3vi" path="res://player/HunterGodot.tscn" id="1"]
[ext_resource type="Material" uid="uid://bch8jjmrr4qnw" path="res://mat/CobleStones.material" id="2"]
[ext_resource type="Material" uid="uid://dy7lsy567vx3j" path="res://mat/Pilars.material" id="3"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_hulul"]
sky_top_color = Color(0.286275, 0.25098, 0.262745, 1)
sky_horizon_color = Color(0.864831, 0.576034, 0.336757, 1)
sky_curve = 0.15529
ground_bottom_color = Color(0.380392, 0.266667, 0.341176, 1)
ground_horizon_color = Color(0.80076, 0.635551, 0.488784, 1)
sun_angle_max = 39.71
sun_curve = 0.139955

[sub_resource type="Sky" id="Sky_n1da0"]
sky_material = SubResource("ProceduralSkyMaterial_hulul")

[sub_resource type="Environment" id="Environment_jd42k"]
background_mode = 2
sky = SubResource("Sky_n1da0")
ambient_light_source = 3
ambient_light_color = Color(0.164706, 0.164706, 0.164706, 1)
ambient_light_sky_contribution = 0.17
ambient_light_energy = 0.0
reflected_light_source = 2
ssr_fade_in = 0.0549032
ssao_intensity = 4.77
ssil_intensity = 2.49
sdfgi_read_sky_light = false
sdfgi_bounce_feedback = 0.65
fog_enabled = true
fog_light_color = Color(0.709804, 0.537255, 0.568627, 1)
fog_light_energy = 0.89
fog_sun_scatter = 1.0
fog_density = 0.002
fog_aerial_perspective = 0.56
fog_height = 1.0
fog_height_density = 0.05
volumetric_fog_enabled = true
volumetric_fog_density = 0.01
volumetric_fog_anisotropy = 0.9
volumetric_fog_length = 98.14

[sub_resource type="CylinderMesh" id="3"]
material = ExtResource("3")
radial_segments = 8

[sub_resource type="CylinderMesh" id="10"]
material = ExtResource("3")
height = 3.0
radial_segments = 8

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_gyltu"]
data = PackedVector3Array(0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.5, 0.9, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.9, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, 0, 0.9, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.9, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.5, 0.9, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.9, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.9, 0.3536, 0, 1.5, 0.5, 0, 0.9, 0.5, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 0.9, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.5, 0.9, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.5, 0.3, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.3536, 0.9, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0.3536, 0.3, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0, 0.9, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, 0, 0.3, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, -0.3536, 0.9, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.3536, 0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.5, 0.9, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.5, 0.3, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.3536, 0.9, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, -0.3536, 0.3, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, -0.3536, 0.3, 0.3536, 0, 0.9, 0.5, 0, 0.3, 0.5, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.5, 0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.5, -0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.3536, 0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0.3536, -0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0, 0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, 0, -0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.3536, -0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.5, 0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.5, -0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.3536, 0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, -0.3536, -0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, -0.3536, -0.3, 0.3536, 0, 0.3, 0.5, 0, -0.3, 0.5, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, -0.3, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.5, -0.3, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.5, -0.9, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.3536, -0.3, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0.3536, -0.9, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0, -0.3, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, 0, -0.9, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, -0.3536, -0.3, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.3536, -0.9, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.5, -0.3, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.5, -0.9, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.3536, -0.3, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, -0.3536, -0.9, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, -0.3536, -0.9, 0.3536, 0, -0.3, 0.5, 0, -0.9, 0.5, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.9, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.5, -0.9, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.3536, -0.9, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0, -0.9, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, -0.3536, -0.9, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.5, -0.9, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.3536, -0.9, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, -0.3536, -1.5, 0.3536, 0, -0.9, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0, 1.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0, 1.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, -1.5, 0, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0, -1.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0, -1.5, 0, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, 0, -1.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5)

[sub_resource type="CylinderMesh" id="15"]
material = ExtResource("3")
height = 5.0
radial_segments = 8

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_t2hng"]
data = PackedVector3Array(0, 2.5, 0.5, 0.3536, 2.5, 0.3536, 0, 1.5, 0.5, 0.3536, 2.5, 0.3536, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0.3536, 2.5, 0.3536, 0.5, 2.5, 0, 0.3536, 1.5, 0.3536, 0.5, 2.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0.5, 2.5, 0, 0.3536, 2.5, -0.3536, 0.5, 1.5, 0, 0.3536, 2.5, -0.3536, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0.3536, 2.5, -0.3536, 0, 2.5, -0.5, 0.3536, 1.5, -0.3536, 0, 2.5, -0.5, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 2.5, -0.5, -0.3536, 2.5, -0.3536, 0, 1.5, -0.5, -0.3536, 2.5, -0.3536, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, -0.3536, 2.5, -0.3536, -0.5, 2.5, 0, -0.3536, 1.5, -0.3536, -0.5, 2.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, -0.5, 2.5, 0, -0.3536, 2.5, 0.3536, -0.5, 1.5, 0, -0.3536, 2.5, 0.3536, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, -0.3536, 2.5, 0.3536, 0, 2.5, 0.5, -0.3536, 1.5, 0.3536, 0, 2.5, 0.5, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.5, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.5, 0.3536, 0, 0.5, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.5, 0.3536, 0.5, 1.5, 0, 0.5, 0.5, 0, 0.3536, 0.5, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.5, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.5, -0.3536, 0.5, 0.5, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.5, -0.3536, 0, 1.5, -0.5, 0, 0.5, -0.5, 0.3536, 0.5, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.5, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.5, -0.3536, 0, 0.5, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.5, -0.3536, -0.5, 1.5, 0, -0.5, 0.5, 0, -0.3536, 0.5, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.5, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.5, 0.3536, -0.5, 0.5, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.5, 0.3536, 0, 1.5, 0.5, 0, 0.5, 0.5, -0.3536, 0.5, 0.3536, 0, 0.5, 0.5, 0.3536, 0.5, 0.3536, 0, -0.5, 0.5, 0.3536, 0.5, 0.3536, 0.3536, -0.5, 0.3536, 0, -0.5, 0.5, 0.3536, 0.5, 0.3536, 0.5, 0.5, 0, 0.3536, -0.5, 0.3536, 0.5, 0.5, 0, 0.5, -0.5, 0, 0.3536, -0.5, 0.3536, 0.5, 0.5, 0, 0.3536, 0.5, -0.3536, 0.5, -0.5, 0, 0.3536, 0.5, -0.3536, 0.3536, -0.5, -0.3536, 0.5, -0.5, 0, 0.3536, 0.5, -0.3536, 0, 0.5, -0.5, 0.3536, -0.5, -0.3536, 0, 0.5, -0.5, 0, -0.5, -0.5, 0.3536, -0.5, -0.3536, 0, 0.5, -0.5, -0.3536, 0.5, -0.3536, 0, -0.5, -0.5, -0.3536, 0.5, -0.3536, -0.3536, -0.5, -0.3536, 0, -0.5, -0.5, -0.3536, 0.5, -0.3536, -0.5, 0.5, 0, -0.3536, -0.5, -0.3536, -0.5, 0.5, 0, -0.5, -0.5, 0, -0.3536, -0.5, -0.3536, -0.5, 0.5, 0, -0.3536, 0.5, 0.3536, -0.5, -0.5, 0, -0.3536, 0.5, 0.3536, -0.3536, -0.5, 0.3536, -0.5, -0.5, 0, -0.3536, 0.5, 0.3536, 0, 0.5, 0.5, -0.3536, -0.5, 0.3536, 0, 0.5, 0.5, 0, -0.5, 0.5, -0.3536, -0.5, 0.3536, 0, -0.5, 0.5, 0.3536, -0.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.5, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.5, 0.3536, 0.5, -0.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.5, 0, 0.3536, -0.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.5, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.5, -0.3536, 0, -0.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.5, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.5, -0.5, -0.3536, -0.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.5, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.5, -0.3536, -0.5, -0.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.5, 0, -0.3536, -0.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.5, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.5, 0.3536, 0, -0.5, 0.5, -0.3536, -1.5, 0.3536, 0, -0.5, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -2.5, 0.5, 0.3536, -1.5, 0.3536, 0.3536, -2.5, 0.3536, 0, -2.5, 0.5, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0.3536, -2.5, 0.3536, 0.5, -1.5, 0, 0.5, -2.5, 0, 0.3536, -2.5, 0.3536, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0.5, -2.5, 0, 0.3536, -1.5, -0.3536, 0.3536, -2.5, -0.3536, 0.5, -2.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0.3536, -2.5, -0.3536, 0, -1.5, -0.5, 0, -2.5, -0.5, 0.3536, -2.5, -0.3536, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -2.5, -0.5, -0.3536, -1.5, -0.3536, -0.3536, -2.5, -0.3536, 0, -2.5, -0.5, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, -0.3536, -2.5, -0.3536, -0.5, -1.5, 0, -0.5, -2.5, 0, -0.3536, -2.5, -0.3536, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, -0.5, -2.5, 0, -0.3536, -1.5, 0.3536, -0.3536, -2.5, 0.3536, -0.5, -2.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5, -0.3536, -2.5, 0.3536, 0, -1.5, 0.5, 0, -2.5, 0.5, -0.3536, -2.5, 0.3536, 0, 2.5, 0, 0.3536, 2.5, 0.3536, 0, 2.5, 0.5, 0, 2.5, 0, 0.5, 2.5, 0, 0.3536, 2.5, 0.3536, 0, 2.5, 0, 0.3536, 2.5, -0.3536, 0.5, 2.5, 0, 0, 2.5, 0, 0, 2.5, -0.5, 0.3536, 2.5, -0.3536, 0, 2.5, 0, -0.3536, 2.5, -0.3536, 0, 2.5, -0.5, 0, 2.5, 0, -0.5, 2.5, 0, -0.3536, 2.5, -0.3536, 0, 2.5, 0, -0.3536, 2.5, 0.3536, -0.5, 2.5, 0, 0, 2.5, 0, 0, 2.5, 0.5, -0.3536, 2.5, 0.3536, 0, -2.5, 0, 0, -2.5, 0.5, 0.3536, -2.5, 0.3536, 0, -2.5, 0, 0.3536, -2.5, 0.3536, 0.5, -2.5, 0, 0, -2.5, 0, 0.5, -2.5, 0, 0.3536, -2.5, -0.3536, 0, -2.5, 0, 0.3536, -2.5, -0.3536, 0, -2.5, -0.5, 0, -2.5, 0, 0, -2.5, -0.5, -0.3536, -2.5, -0.3536, 0, -2.5, 0, -0.3536, -2.5, -0.3536, -0.5, -2.5, 0, 0, -2.5, 0, -0.5, -2.5, 0, -0.3536, -2.5, 0.3536, 0, -2.5, 0, -0.3536, -2.5, 0.3536, 0, -2.5, 0.5)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_1l8u4"]
data = PackedVector3Array(0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.5, 0.9, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.9, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, 0, 0.9, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.9, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.5, 0.9, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.9, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.9, 0.3536, 0, 1.5, 0.5, 0, 0.9, 0.5, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 0.9, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.5, 0.9, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.5, 0.3, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.3536, 0.9, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0.3536, 0.3, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0, 0.9, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, 0, 0.3, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, -0.3536, 0.9, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.3536, 0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.5, 0.9, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.5, 0.3, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.3536, 0.9, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, -0.3536, 0.3, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, -0.3536, 0.3, 0.3536, 0, 0.9, 0.5, 0, 0.3, 0.5, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.5, 0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.5, -0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.3536, 0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0.3536, -0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0, 0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, 0, -0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.3536, -0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.5, 0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.5, -0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.3536, 0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, -0.3536, -0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, -0.3536, -0.3, 0.3536, 0, 0.3, 0.5, 0, -0.3, 0.5, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, -0.3, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.5, -0.3, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.5, -0.9, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.3536, -0.3, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0.3536, -0.9, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0, -0.3, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, 0, -0.9, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, -0.3536, -0.3, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.3536, -0.9, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.5, -0.3, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.5, -0.9, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.3536, -0.3, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, -0.3536, -0.9, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, -0.3536, -0.9, 0.3536, 0, -0.3, 0.5, 0, -0.9, 0.5, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.9, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.5, -0.9, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.3536, -0.9, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0, -0.9, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, -0.3536, -0.9, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.5, -0.9, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.3536, -0.9, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, -0.3536, -1.5, 0.3536, 0, -0.9, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0, 1.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0, 1.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, -1.5, 0, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0, -1.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0, -1.5, 0, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, 0, -1.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_t1rws"]
data = PackedVector3Array(0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.5, 0.9, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.9, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, 0, 0.9, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.9, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.5, 0.9, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.9, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.9, 0.3536, 0, 1.5, 0.5, 0, 0.9, 0.5, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 0.9, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.5, 0.9, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.5, 0.3, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.3536, 0.9, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0.3536, 0.3, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0, 0.9, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, 0, 0.3, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, -0.3536, 0.9, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.3536, 0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.5, 0.9, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.5, 0.3, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.3536, 0.9, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, -0.3536, 0.3, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, -0.3536, 0.3, 0.3536, 0, 0.9, 0.5, 0, 0.3, 0.5, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.5, 0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.5, -0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.3536, 0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0.3536, -0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0, 0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, 0, -0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.3536, -0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.5, 0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.5, -0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.3536, 0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, -0.3536, -0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, -0.3536, -0.3, 0.3536, 0, 0.3, 0.5, 0, -0.3, 0.5, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, -0.3, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.5, -0.3, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.5, -0.9, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.3536, -0.3, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0.3536, -0.9, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0, -0.3, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, 0, -0.9, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, -0.3536, -0.3, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.3536, -0.9, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.5, -0.3, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.5, -0.9, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.3536, -0.3, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, -0.3536, -0.9, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, -0.3536, -0.9, 0.3536, 0, -0.3, 0.5, 0, -0.9, 0.5, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.9, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.5, -0.9, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.3536, -0.9, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0, -0.9, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, -0.3536, -0.9, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.5, -0.9, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.3536, -0.9, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, -0.3536, -1.5, 0.3536, 0, -0.9, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0, 1.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0, 1.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, -1.5, 0, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0, -1.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0, -1.5, 0, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, 0, -1.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_65o51"]
data = PackedVector3Array(0, 2.5, 0.5, 0.3536, 2.5, 0.3536, 0, 1.5, 0.5, 0.3536, 2.5, 0.3536, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0.3536, 2.5, 0.3536, 0.5, 2.5, 0, 0.3536, 1.5, 0.3536, 0.5, 2.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0.5, 2.5, 0, 0.3536, 2.5, -0.3536, 0.5, 1.5, 0, 0.3536, 2.5, -0.3536, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0.3536, 2.5, -0.3536, 0, 2.5, -0.5, 0.3536, 1.5, -0.3536, 0, 2.5, -0.5, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 2.5, -0.5, -0.3536, 2.5, -0.3536, 0, 1.5, -0.5, -0.3536, 2.5, -0.3536, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, -0.3536, 2.5, -0.3536, -0.5, 2.5, 0, -0.3536, 1.5, -0.3536, -0.5, 2.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, -0.5, 2.5, 0, -0.3536, 2.5, 0.3536, -0.5, 1.5, 0, -0.3536, 2.5, 0.3536, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, -0.3536, 2.5, 0.3536, 0, 2.5, 0.5, -0.3536, 1.5, 0.3536, 0, 2.5, 0.5, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.5, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.5, 0.3536, 0, 0.5, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.5, 0.3536, 0.5, 1.5, 0, 0.5, 0.5, 0, 0.3536, 0.5, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.5, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.5, -0.3536, 0.5, 0.5, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.5, -0.3536, 0, 1.5, -0.5, 0, 0.5, -0.5, 0.3536, 0.5, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.5, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.5, -0.3536, 0, 0.5, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.5, -0.3536, -0.5, 1.5, 0, -0.5, 0.5, 0, -0.3536, 0.5, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.5, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.5, 0.3536, -0.5, 0.5, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.5, 0.3536, 0, 1.5, 0.5, 0, 0.5, 0.5, -0.3536, 0.5, 0.3536, 0, 0.5, 0.5, 0.3536, 0.5, 0.3536, 0, -0.5, 0.5, 0.3536, 0.5, 0.3536, 0.3536, -0.5, 0.3536, 0, -0.5, 0.5, 0.3536, 0.5, 0.3536, 0.5, 0.5, 0, 0.3536, -0.5, 0.3536, 0.5, 0.5, 0, 0.5, -0.5, 0, 0.3536, -0.5, 0.3536, 0.5, 0.5, 0, 0.3536, 0.5, -0.3536, 0.5, -0.5, 0, 0.3536, 0.5, -0.3536, 0.3536, -0.5, -0.3536, 0.5, -0.5, 0, 0.3536, 0.5, -0.3536, 0, 0.5, -0.5, 0.3536, -0.5, -0.3536, 0, 0.5, -0.5, 0, -0.5, -0.5, 0.3536, -0.5, -0.3536, 0, 0.5, -0.5, -0.3536, 0.5, -0.3536, 0, -0.5, -0.5, -0.3536, 0.5, -0.3536, -0.3536, -0.5, -0.3536, 0, -0.5, -0.5, -0.3536, 0.5, -0.3536, -0.5, 0.5, 0, -0.3536, -0.5, -0.3536, -0.5, 0.5, 0, -0.5, -0.5, 0, -0.3536, -0.5, -0.3536, -0.5, 0.5, 0, -0.3536, 0.5, 0.3536, -0.5, -0.5, 0, -0.3536, 0.5, 0.3536, -0.3536, -0.5, 0.3536, -0.5, -0.5, 0, -0.3536, 0.5, 0.3536, 0, 0.5, 0.5, -0.3536, -0.5, 0.3536, 0, 0.5, 0.5, 0, -0.5, 0.5, -0.3536, -0.5, 0.3536, 0, -0.5, 0.5, 0.3536, -0.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.5, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.5, 0.3536, 0.5, -0.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.5, 0, 0.3536, -0.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.5, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.5, -0.3536, 0, -0.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.5, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.5, -0.5, -0.3536, -0.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.5, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.5, -0.3536, -0.5, -0.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.5, 0, -0.3536, -0.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.5, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.5, 0.3536, 0, -0.5, 0.5, -0.3536, -1.5, 0.3536, 0, -0.5, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -2.5, 0.5, 0.3536, -1.5, 0.3536, 0.3536, -2.5, 0.3536, 0, -2.5, 0.5, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0.3536, -2.5, 0.3536, 0.5, -1.5, 0, 0.5, -2.5, 0, 0.3536, -2.5, 0.3536, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0.5, -2.5, 0, 0.3536, -1.5, -0.3536, 0.3536, -2.5, -0.3536, 0.5, -2.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0.3536, -2.5, -0.3536, 0, -1.5, -0.5, 0, -2.5, -0.5, 0.3536, -2.5, -0.3536, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -2.5, -0.5, -0.3536, -1.5, -0.3536, -0.3536, -2.5, -0.3536, 0, -2.5, -0.5, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, -0.3536, -2.5, -0.3536, -0.5, -1.5, 0, -0.5, -2.5, 0, -0.3536, -2.5, -0.3536, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, -0.5, -2.5, 0, -0.3536, -1.5, 0.3536, -0.3536, -2.5, 0.3536, -0.5, -2.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5, -0.3536, -2.5, 0.3536, 0, -1.5, 0.5, 0, -2.5, 0.5, -0.3536, -2.5, 0.3536, 0, 2.5, 0, 0.3536, 2.5, 0.3536, 0, 2.5, 0.5, 0, 2.5, 0, 0.5, 2.5, 0, 0.3536, 2.5, 0.3536, 0, 2.5, 0, 0.3536, 2.5, -0.3536, 0.5, 2.5, 0, 0, 2.5, 0, 0, 2.5, -0.5, 0.3536, 2.5, -0.3536, 0, 2.5, 0, -0.3536, 2.5, -0.3536, 0, 2.5, -0.5, 0, 2.5, 0, -0.5, 2.5, 0, -0.3536, 2.5, -0.3536, 0, 2.5, 0, -0.3536, 2.5, 0.3536, -0.5, 2.5, 0, 0, 2.5, 0, 0, 2.5, 0.5, -0.3536, 2.5, 0.3536, 0, -2.5, 0, 0, -2.5, 0.5, 0.3536, -2.5, 0.3536, 0, -2.5, 0, 0.3536, -2.5, 0.3536, 0.5, -2.5, 0, 0, -2.5, 0, 0.5, -2.5, 0, 0.3536, -2.5, -0.3536, 0, -2.5, 0, 0.3536, -2.5, -0.3536, 0, -2.5, -0.5, 0, -2.5, 0, 0, -2.5, -0.5, -0.3536, -2.5, -0.3536, 0, -2.5, 0, -0.3536, -2.5, -0.3536, -0.5, -2.5, 0, 0, -2.5, 0, -0.5, -2.5, 0, -0.3536, -2.5, 0.3536, 0, -2.5, 0, -0.3536, -2.5, 0.3536, 0, -2.5, 0.5)

[sub_resource type="BoxMesh" id="82"]
material = ExtResource("3")
size = Vector3(12, 3, 1)
subdivide_height = 1

[sub_resource type="BoxMesh" id="1"]
material = ExtResource("2")
size = Vector3(1.5, 1, 1.5)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_mxx5b"]
data = PackedVector3Array(-0.75, 0.5, 0.75, 0.75, 0.5, 0.75, -0.75, -0.5, 0.75, 0.75, 0.5, 0.75, 0.75, -0.5, 0.75, -0.75, -0.5, 0.75, 0.75, 0.5, -0.75, -0.75, 0.5, -0.75, 0.75, -0.5, -0.75, -0.75, 0.5, -0.75, -0.75, -0.5, -0.75, 0.75, -0.5, -0.75, 0.75, 0.5, 0.75, 0.75, 0.5, -0.75, 0.75, -0.5, 0.75, 0.75, 0.5, -0.75, 0.75, -0.5, -0.75, 0.75, -0.5, 0.75, -0.75, 0.5, -0.75, -0.75, 0.5, 0.75, -0.75, -0.5, -0.75, -0.75, 0.5, 0.75, -0.75, -0.5, 0.75, -0.75, -0.5, -0.75, 0.75, 0.5, 0.75, -0.75, 0.5, 0.75, 0.75, 0.5, -0.75, -0.75, 0.5, 0.75, -0.75, 0.5, -0.75, 0.75, 0.5, -0.75, -0.75, -0.5, 0.75, 0.75, -0.5, 0.75, -0.75, -0.5, -0.75, 0.75, -0.5, 0.75, 0.75, -0.5, -0.75, -0.75, -0.5, -0.75)

[node name="World" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_jd42k")

[node name="DirectionalLight" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.853191, -0.0827259, -0.514996, 0.253368, 0.928763, 0.270562, 0.455927, -0.361325, 0.813372, -5.94147, 4.66911, 12.5543)
light_color = Color(0.827451, 0.427451, 0.231373, 1)
light_energy = 2.909
light_indirect_energy = 1.519
shadow_enabled = true
shadow_bias = 2.308

[node name="Pilars And Floor" type="Node3D" parent="."]

[node name="CSGCombiner3D" type="CSGCombiner3D" parent="Pilars And Floor"]
use_collision = true

[node name="LoPilar" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(4, 0, 0, 0, 3.5, 0, 0, 0, 4, 0.845225, 3.39317, 12.9808)
mesh = SubResource("3")

[node name="MidPilar" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, 3.6283, 2.22217, 7.50491)
mesh = SubResource("10")

[node name="MidPilar2" type="MeshInstance3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-6.52741e-08, 1.4933, -0.141631, -1.5, -6.55671e-08, 3.31847e-14, -6.19091e-09, 0.141631, 1.4933, -1.93198, 0.644425, 6.68668)
mesh = SubResource("10")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars And Floor/CSGCombiner3D/MidPilar2"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars And Floor/CSGCombiner3D/MidPilar2/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_gyltu")

[node name="HiPilar" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, 3.83263, 3.13039, 2.91001)
mesh = SubResource("15")

[node name="HiPilar2" type="MeshInstance3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(1.31336, 0.62416, -0.368122, -0.600999, 0.512534, -1.27519, -0.40483, 1.26402, 0.69884, -1.40547, 1.55654, 5.84204)
mesh = SubResource("15")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars And Floor/CSGCombiner3D/HiPilar2"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars And Floor/CSGCombiner3D/HiPilar2/StaticBody3D"]
transform = Transform3D(1, 0, 2.23517e-08, 0, 1, 0, 3.72529e-08, -2.98023e-08, 1, 0, 0, 0)
shape = SubResource("ConcavePolygonShape3D_t2hng")

[node name="LoPilar3" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, -2.73471, 1.40161, -11.5207)
mesh = SubResource("3")

[node name="LoPilar4" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, 3.64355, 1.40161, -11.5207)
mesh = SubResource("3")

[node name="MidPilar3" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, -2.8429, 2.22217, -7.16215)
mesh = SubResource("10")

[node name="MidPilar4" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, 3.58307, 2.22217, -7.16215)
mesh = SubResource("10")

[node name="LoPilar5" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, -1.5, 0, 1.5, 0, 1.5, 0, -6.55671e-08, -11.0316, 1.40161, 2.77872)
mesh = SubResource("3")

[node name="LoPilar6" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, -1.5, 0, 1.5, 0, 1.5, 0, -6.55671e-08, -11.0316, 1.40161, -3.59953)
mesh = SubResource("3")

[node name="MidPilar5" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, -1.5, 0, 1.5, 0, 1.5, 0, -6.55671e-08, -6.67308, 2.22217, 2.88692)
mesh = SubResource("10")

[node name="MidPilar6" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, -1.5, 0, 1.5, 0, 1.5, 0, -6.55671e-08, -6.67308, 2.22217, -3.53905)
mesh = SubResource("10")

[node name="LoPilar7" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, 1.5, 0, 1.5, 0, -1.5, 0, -6.55671e-08, 11.9221, 1.40161, -3.47609)
mesh = SubResource("3")

[node name="LoPilar8" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, 1.5, 0, 1.5, 0, -1.5, 0, -6.55671e-08, 11.9221, 1.40161, 2.90217)
mesh = SubResource("3")

[node name="MidPilar7" type="MeshInstance3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-5.81074e-08, 0.161897, 1.49124, 1.5, -6.55671e-08, 6.55671e-08, 7.22607e-08, 1.49124, -0.161897, 8.54406, 0.774648, 0.276984)
mesh = SubResource("10")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars And Floor/CSGCombiner3D/MidPilar7"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars And Floor/CSGCombiner3D/MidPilar7/StaticBody3D"]
transform = Transform3D(1, 7.10543e-15, -3.55271e-15, 0, 1, 2.98023e-08, 0, -2.98023e-08, 1, 0, 0, 0)
shape = SubResource("ConcavePolygonShape3D_1l8u4")

[node name="MidPilar8" type="MeshInstance3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-0.750657, 1.26438, 0.296409, 1.20675, 0.805625, -0.380422, -0.479862, 0.0480832, -1.42036, 7.87145, 1.45442, -0.152988)
mesh = SubResource("10")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars And Floor/CSGCombiner3D/MidPilar8"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars And Floor/CSGCombiner3D/MidPilar8/StaticBody3D"]
transform = Transform3D(1, 0, 0, -3.55271e-15, 1, 2.98023e-08, -1.77636e-15, -2.98023e-08, 1, 0, 0, 0)
shape = SubResource("ConcavePolygonShape3D_t1rws")

[node name="HiPilar3" type="MeshInstance3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(0.998196, 1.04651, -0.397999, 0.555544, -5.73678e-08, 1.39333, 0.972097, -1.07462, -0.387591, -2.92516, 0.70246, -3.3633)
mesh = SubResource("15")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars And Floor/CSGCombiner3D/HiPilar3"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars And Floor/CSGCombiner3D/HiPilar3/StaticBody3D"]
transform = Transform3D(1, -2.98023e-08, 2.98023e-08, -5.96046e-08, 1, 0, 1.19209e-07, -5.96046e-08, 1, 0, 0, 0)
shape = SubResource("ConcavePolygonShape3D_65o51")

[node name="HiPilar4" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, 3.54861, 3.42662, -3.3633)
mesh = SubResource("15")

[node name="Wall" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, 8.67992, 2.29353, 12.5756)
mesh = SubResource("82")

[node name="Wall5" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(1.4197, -1.2782e-08, 0.484192, -0.484192, -6.67808e-08, 1.4197, 9.4587e-09, -1.5, -6.73319e-08, -12.0999, 3.42571, 12.0046)
mesh = SubResource("82")

[node name="Wall2" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, -9.03152, 2.22217, -15.748)
mesh = SubResource("82")

[node name="Wall3" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-4.37114e-08, 0, 4, 0, 1.5, 0, -1, 0, -1.74846e-07, 15.0499, 2.22217, 3.82344)
mesh = SubResource("82")

[node name="Wall4" type="CSGMesh3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, 1.5, 0, 1.5, 0, -1.5, 0, -6.55671e-08, -18.0822, 2.22217, 10.0673)
mesh = SubResource("82")

[node name="Hole" type="CSGBox3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.825, 5.78407, 12.846)
operation = 2
size = Vector3(1, 2.366, 5.122)
material = ExtResource("3")

[node name="Hole2" type="CSGBox3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0.825, 5.78407, 12.846)
operation = 2
size = Vector3(1, 2.366, 5.122)
material = ExtResource("3")

[node name="Cave" type="CSGCylinder3D" parent="Pilars And Floor/CSGCombiner3D"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1.7, 0, 1, -7.43094e-08, 14.9318, 1.21304, 3.74965)
operation = 2
radius = 1.26505
height = 13.3813
sides = 14
material = ExtResource("3")

[node name="MeshInstanceFloor" type="MeshInstance3D" parent="Pilars And Floor"]
transform = Transform3D(25, 0, 0, 0, 1, 0, 0, 0, 25, 0, -0.496773, 0)
mesh = SubResource("1")
skeleton = NodePath("../..")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars And Floor/MeshInstanceFloor"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars And Floor/MeshInstanceFloor/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_mxx5b")

[node name="HunterG4" parent="." instance=ExtResource("1")]
